# Program NAME
NAME = libft.a

# Compiler
CC = gcc

# Compile option
CFLAGS = -Wall -Wextra -Werror

# Source files
SOURCES =\
	ft_atoi.c \
	ft_bzero.c \
	ft_calloc.c \
	ft_isalnum.c \
	ft_isalpha.c \
	ft_isascii.c \
	ft_isdigit.c \
	ft_isprint.c \
	ft_itoa.c \
	ft_memchr.c \
	ft_memcmp.c \
	ft_memcpy.c \
	ft_memmove.c \
	ft_memset.c \
	ft_putchar_fd.c \
	ft_putendl_fd.c \
	ft_putnbr_fd.c \
	ft_putstr_fd.c \
	ft_split.c \
	ft_strchr.c \
	ft_strdup.c \
	ft_striteri.c \
	ft_strjoin.c \
	ft_strlcat.c \
	ft_strlcpy.c \
	ft_strlen.c \
	ft_strmapi.c \
	ft_strncmp.c \
	ft_strnstr.c \
	ft_strrchr.c \
	ft_strtrim.c \
	ft_substr.c \
	ft_tolower.c \
	ft_toupper.c

SOURCES_BONUS =\
	ft_lstadd_back_bonus.c \
	ft_lstadd_front_bonus.c \
	ft_lstclear_bonus.c \
	ft_lstdelone_bonus.c \
	ft_lstiter_bonus.c \
	ft_lstlast_bonus.c \
	ft_lstmap_bonus.c \
	ft_lstnew_bonus.c \
	ft_lstsize_bonus.c

# Header files
HEADER = libft.h

# Object files generated by the compiler
OBJECTS = $(SOURCES:.c=.o)
OBJECTS_BONUS = $(SOURCES_BONUS:.c=.o)

# Default rule
all: $(NAME)

# Target rule ($@ = NAME / $^ = all objects)
$(NAME): $(OBJECTS) $(HEADER)
	ar rcs $(NAME) $(OBJECTS)

# Bonus rule
bonus: $(OBJECTS_BONUS) $(HEADER)
	ar rcs $(NAME) $(OBJECTS_BONUS)

# Generic rule from source files to object files ($< = 1st dependance)
%.o: %.c $(HEADER)
	$(CC) $(CFLAGS) -I . -c $< -o $@

# Object files cleaner
clean:
	rm -f $(OBJECTS) $(OBJECTS_BONUS)

# Library cleaner
fclean: clean
	rm -f $(NAME)

# All project cleaner, then rebuild it
re: fclean all

# Phony targets
.PHONY: all clean fclean re bonus
